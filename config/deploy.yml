# Name of your application. Used to uniquely configure containers.
service: nanny-tally

# Name of the container image.
image: zbarnes757/nanny-tally

# Deploy to these servers.
servers:
  web:
    - 159.89.89.1
  # job:
  #   hosts:
  #     - 159.89.89.1
  #   cmd: bin/jobs

# Enable SSL auto certification via Let's Encrypt and allow for multiple apps on a single web server.
# Remove this section when using multiple web servers and ensure you terminate SSL at your load balancer.
#
# Note: If using Cloudflare, set encryption mode in SSL/TLS setting to "Full" to enable CF-to-app encryption.
proxy:
  ssl: true
  host: nannytally.livinginabarnes.com
  # Proxy connects to your container on port 80 by default.
  app_port: 8080

# Credentials for your image host.
registry:
  # Specify the registry server, if you're not using Docker Hub
  server: registry.digitalocean.com
  username: zbarnes757
  password:
    - KAMAL_REGISTRY_PASSWORD

# Configure builder setup.
builder:
  arch: amd64
  # Pass in additional build args needed for your Dockerfile.
  # args:
  #   RUBY_VERSION: <%= ENV["RBENV_VERSION"] || ENV["rvm_ruby_string"] || "#{RUBY_ENGINE}-#{RUBY_ENGINE_VERSION}" %>

# Inject ENV variables into containers (secrets come from .kamal/secrets).
#
env:
  clear:
    APP_NAME: "NannyTally"
    APP_ENV: production
    APP_DEBUG: false
    APP_URL: https://nannytally.livinginabarnes.com
    ASSET_URL: https://nannytally.livinginabarnes.com
    LOG_CHANNEL: stderr
    LOG_LEVEL: info
    DB_CONNECTION: pgsql
    CACHE_STORE: file
    BROADCAST_DRIVER: log
    QUEUE_CONNECTION: database
    SESSION_DRIVER: database
    SESSION_LIFETIME: "120"
  secret:
    - APP_KEY
    - DB_URL

# Aliases are triggered with "bin/kamal <alias>". You can overwrite arguments on invocation:
# "bin/kamal app logs -r job" will tail logs from the first server in the job section.
#
aliases:
  console: app exec --reuse -i "sh"
  tinker: app exec --reuse -i "php artisan tinker"
  logs: app exec --reuser -i "php artisan pail"

# Use a different ssh user than root
#
# ssh:
#   user: app

# Use a persistent storage volume.
#
volumes:
  - "storage:/app-media/"

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
#
asset_path: /var/www/html/public/build
# Configure rolling deploys by setting a wait time between batches of restarts.
#
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2

# Use accessory services (secrets come from .kamal/secrets).
#
# accessories:
#   db:
#     image: mariadb:11
#     host: 159.89.89.1
#     port: 3306
#     env:
#       clear:
#         MYSQL_ROOT_HOST: "%"
#       secret:
#         - MYSQL_ROOT_PASSWORD
#         - MYSQL_DATABASE
#         - MYSQL_USER
#         - MYSQL_PASSWORD
#     directories:
#       - data:/var/lib/mysql
# #   redis:
#     image: valkey/valkey:8
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data
